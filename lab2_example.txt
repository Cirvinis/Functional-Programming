Running and manual testing example:

1) With 'stack run fp2024-two'
    1. Navigate to needed folder (/workspaces/fp-2024/src)
    2. Run 'stack run fp2024-two'
    3. Write commands with arguments

    Examples with expected output:
    >>> ADD cat Tom 5
    Added animal: Animal {species = "cat", name = "Tom", age = 5}
    >>> ADD fish Jem 1
    Added animal: Animal {species = "fish", name = "Jem", age = 1}
    >>> ADD fish Jem 1
    ERROR:Animal Animal {species = "fish", name = "Jem", age = 1} already exists.
    >>> LIST
    Current animals: [Animal {species = "fish", name = "Jem", age = 1},Animal {species = "cat", name = "Tom", age = 5}]
    >>> DELETE fish Jem 1
    Deleted animal: Animal {species = "fish", name = "Jem", age = 1}
    >>> ADD dog Max 3
    Added animal: Animal {species = "dog", name = "Max", age = 3}
    >>> LIST
    Current animals: [Animal {species = "dog", name = "Max", age = 3},Animal {species = "cat", name = "Tom", age = 5}]
    >>> 

2) Testing one by one:
    1. Navigate to needed folder (/workspaces/fp-2024/src)
    2. Run 'ghci'
    3. :l Lib2.hs
    4. Write commands with arguments

    Examples with expected output:
    ghci> Animal "Cat" "Tom" 5
    Animal {species = "Cat", name = "Tom", age = 5}
    ghci> parseAdd "ADD fish Jojo 1"
    Right (Add (Animal {species = "fish", name = "Jojo", age = 1}))

    ghci> let state = emptyState
    ghci> let query = parseQuery "list_animals"
    ghci> print query
    Right ListAnimals

------------
3) For testing with main

    1. navigate to needed folder (/workspaces/fp-2024/src)
    2. Write "ghci Lib2.hs"
    3. Write "main"

------------
4) For making sure that tests from Spec.hs pass
    1. Just write "stack test"